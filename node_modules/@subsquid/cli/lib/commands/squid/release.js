"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@oclif/core");
const simple_git_1 = __importDefault(require("simple-git"));
const release_1 = require("../../rest-client/routes/release");
const utils_1 = require("../../utils");
const options = {
    baseDir: process.cwd(),
    binary: 'git',
};
const git = (0, simple_git_1.default)(options);
class Release extends core_1.Command {
    async run() {
        const { flags, args } = await this.parse(Release);
        const description = flags.description;
        const nameAndVersion = args.nameAndVersion;
        const { squidName, versionName } = (0, utils_1.parseNameAndVersion)(nameAndVersion, this);
        let deployUrl = flags.source;
        if (!deployUrl) {
            deployUrl = await (0, utils_1.buildRemoteUrlFromGit)(git, this);
        }
        else {
            deployUrl = deployUrl.split('#')[0].endsWith('.git')
                ? deployUrl
                : `${deployUrl.split('#')[0]}.git${deployUrl.split('#')[1]
                    ? '#' + deployUrl.split('#')[1]
                    : ''}`;
        }
        this.log(`ü¶ë Releasing the Squid at ${deployUrl}`);
        const result = await (0, release_1.release)(squidName, versionName, deployUrl, description);
        this.log('‚ó∑ You may now detach from the build process by pressing Ctrl + C. The Squid deployment will continue uninterrupted.');
        this.log('‚ó∑ The new squid will be available as soon as the deployment is complete.');
        await (0, utils_1.pollDeployPipelines)(squidName, versionName, result?.version.deploymentUrl || '', this);
        this.log('‚úîÔ∏è Done!');
    }
}
exports.default = Release;
Release.description = 'Create a new Squid version';
Release.args = [
    {
        name: 'nameAndVersion',
        description: 'name@version',
        required: true,
    },
];
Release.flags = {
    source: core_1.Flags.string({
        char: 's',
        description: 'A fully qualified git url, e.g. https://github.com/squidlover/my-squid.git#v5',
        required: false,
    }),
    description: core_1.Flags.string({
        char: 'd',
        description: 'description',
        required: false,
    }),
};
//# sourceMappingURL=release.js.map