"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDeployPipeline = exports.DeployPipelineStatusEnum = void 0;
const baseUrl_1 = require("../baseUrl");
const creds_1 = require("../../creds");
const request_1 = require("../request");
const query_string_1 = __importDefault(require("query-string"));
var DeployPipelineStatusEnum;
(function (DeployPipelineStatusEnum) {
    DeployPipelineStatusEnum["CREATED"] = "CREATED";
    DeployPipelineStatusEnum["IMAGE_BUILDING"] = "IMAGE_BUILDING";
    DeployPipelineStatusEnum["IMAGE_PUSHING"] = "IMAGE_PUSHING";
    DeployPipelineStatusEnum["DEPLOYING"] = "DEPLOYING";
    DeployPipelineStatusEnum["OK"] = "OK";
})(DeployPipelineStatusEnum = exports.DeployPipelineStatusEnum || (exports.DeployPipelineStatusEnum = {}));
async function getDeployPipeline(squidName, versionName) {
    const apiUrl = `${baseUrl_1.baseUrl}/client/squid/${squidName}/pipeline`;
    const params = query_string_1.default.stringify({ name: versionName });
    const response = await (0, request_1.request)(`${apiUrl}?${params}`, {
        method: 'get',
        headers: {
            // eslint-disable-next-line @typescript-eslint/naming-convention
            'Content-Type': 'application/json',
            authorization: `token ${(0, creds_1.getCreds)()}`,
        },
    });
    const responseBody = await response.json();
    if (response.status === 200) {
        return responseBody;
    }
}
exports.getDeployPipeline = getDeployPipeline;
//# sourceMappingURL=pipeline.js.map