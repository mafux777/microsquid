import { GraphQLResolveInfo } from "graphql";
import { Model, PropType } from "./model";
export interface RequestedFields {
    [name: string]: RequestedField;
}
export interface RequestedField {
    propType: PropType;
    requests: FieldRequest[];
}
export interface FieldRequest {
    alias: string;
    children?: RequestedFields;
    args?: any;
    ifType?: string;
    index: number;
}
export declare function requestedFields(model: Model, entityName: string, info: GraphQLResolveInfo): RequestedFields;
export interface ConnectionRequestedFields {
    totalCount?: boolean;
    pageInfo?: boolean;
    edges?: {
        node?: RequestedFields;
        cursor?: boolean;
    };
}
export declare function connectionRequestedFields(model: Model, entityName: string, info: GraphQLResolveInfo): ConnectionRequestedFields;
export interface FtsRequestedFields {
    item?: Record<string, RequestedFields>;
    highlight?: boolean;
    rank?: boolean;
}
export declare function ftsRequestedFields(model: Model, queryName: string, info: GraphQLResolveInfo): FtsRequestedFields;
//# sourceMappingURL=requestedFields.d.ts.map