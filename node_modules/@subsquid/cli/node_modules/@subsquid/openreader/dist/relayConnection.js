"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.decodeConnectionArgs = exports.InvalidCursorValue = exports.decodeCursor = exports.encodeCursor = void 0;
const apollo_server_core_1 = require("apollo-server-core");
function encodeCursor(cursor) {
    return '' + cursor;
}
exports.encodeCursor = encodeCursor;
function decodeCursor(value) {
    let cursor = parseInt(value);
    if (isFinite(cursor) && cursor >= 0) {
        return cursor;
    }
    else {
        throw new InvalidCursorValue(value);
    }
}
exports.decodeCursor = decodeCursor;
class InvalidCursorValue extends apollo_server_core_1.UserInputError {
    constructor(value) {
        super(`invalid cursor value: ${value}`);
    }
}
exports.InvalidCursorValue = InvalidCursorValue;
/**
 * https://relay.dev/assets/files/connections-932f4f2cdffd79724ac76373deb30dc8.htm#sec-Pagination-algorithm
 */
function decodeConnectionArgs(args) {
    let offset = 0;
    let limit = 100;
    if (args.after) {
        offset = decodeCursor(args.after);
    }
    if (args.first != null) {
        if (args.first < 0) {
            throw new apollo_server_core_1.UserInputError("'first' argument of connection can't be less than 0");
        }
        limit = args.first;
    }
    return { offset, limit };
}
exports.decodeConnectionArgs = decodeConnectionArgs;
//# sourceMappingURL=relayConnection.js.map