import { Network, ArchiveProvider } from ".";
import { ChainName } from "./chains";
/**
 * Lookup an archive endpoint by network name, provider (optional) and genesis hash (optional)
 *
 * @param network network name for lookup
 * @param genesis network genesis hex string (must start with "0x...")
 * @param semver semver range to match archive image version
 * @param image archive image name
 * @param gateway archive gateway image
 *
 * @returns Archive endpoint url matching the filter
 * @throws If none matching archive is found or if there's ambiguity in choosing the network
 */
export declare function lookupArchive(network: ChainName, semver?: string, genesis?: string, image?: string, gateway?: string): ArchiveProvider[];
/**
 * Get parachain information by its name
 *
 * @param network Network name
 * @returns Chain info incluing genesis hash, token symbols, parachainId if relevent, etc
 */
export declare function getChainInfo(network: string, genesis?: string): Network;
export declare function getGenesisHash(endpoint: string): Promise<string>;
export declare function getVersion(endpoint: string): Promise<string>;
//# sourceMappingURL=lookup.d.ts.map