import { ArrayType, BitSequenceType, DoNotConstructType, OptionType, PrimitiveType, SequenceType, TupleType, Type, TypeKind } from "@subsquid/scale-codec";
import { CodecBooleanOptionType, CodecBytesArrayType, CodecBytesType, CodecCompactType, CodecStructType, CodecVariant, CodecVariantType } from "@subsquid/scale-codec/lib/types-codec";
export interface JsonVariantType {
    kind: TypeKind.Variant;
    variantsByPropName: Record<string, CodecVariant>;
    variantNames?: Record<string, boolean>;
}
export declare type JsonType = PrimitiveType | SequenceType | BitSequenceType | ArrayType | TupleType | OptionType | DoNotConstructType | CodecCompactType | CodecStructType | CodecBytesType | CodecBytesArrayType | CodecBooleanOptionType | JsonVariantType;
export declare function toJsonTypes(types: Type[]): JsonType[];
export declare function toJsonVariantType(type: CodecVariantType): JsonVariantType;
//# sourceMappingURL=types.d.ts.map