"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceManager = void 0;
const async_1 = require("./async");
class ServiceManager {
    constructor() {
        this.services = [];
        this.stopped = false;
    }
    add(s) {
        if (this.stopped)
            throw new Error('Service manager is already stopped');
        this.services.push(s);
        return s;
    }
    async stop() {
        let ok = true;
        for (let i = this.services.length - 1; i >= 0; i--) {
            let err;
            try {
                let closeResult = this.services[i].close();
                if (closeResult) {
                    err = await closeResult;
                }
            }
            catch (e) {
                err = e;
            }
            if (!(err instanceof async_1.AbortError)) {
                ok = ok && !err;
                if (err)
                    console.error(err);
            }
        }
        return ok;
    }
    shutdown(err) {
        if (err)
            console.error(err);
        if (this.stopped)
            return;
        this.stopped = true;
        this.stop().then(ok => {
            ok = ok && !err;
            process.exit(ok ? 0 : 1);
        });
    }
    static run(app) {
        let sm = new ServiceManager();
        app(sm).then(() => sm.shutdown(), err => sm.shutdown(err));
    }
}
exports.ServiceManager = ServiceManager;
//# sourceMappingURL=sm.js.map