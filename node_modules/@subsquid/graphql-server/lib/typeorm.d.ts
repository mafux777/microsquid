import { Database, Transaction } from "@subsquid/openreader/dist/db";
import type { Connection, EntityManager } from "typeorm";
export declare class EMDatabase implements Database {
    private em;
    constructor(em: EntityManager);
    query(sql: string, parameters?: any[]): Promise<any[][]>;
    escapeIdentifier(name: string): string;
}
export declare class TypeormTransaction implements Transaction {
    private con;
    private tx;
    private closed;
    constructor(con: Connection);
    get(): Promise<Database>;
    getEntityManager(): Promise<EntityManager>;
    private getTx;
    close(): void;
}
//# sourceMappingURL=typeorm.d.ts.map