import { BigSource } from "big.js";
import { Currency, MonetaryAmount } from "../monetary";
export declare const KintsugiUnit: {
    readonly KINT: 12;
    readonly Planck: 0;
};
export declare type KintsugiUnit = typeof KintsugiUnit;
export declare const Kintsugi: Currency<KintsugiUnit>;
export declare type Kintsugi = typeof Kintsugi;
export declare class KintsugiAmount extends MonetaryAmount<Kintsugi, KintsugiUnit> {
    constructor(amount: BigSource, unit?: keyof KintsugiUnit);
    withAmount(amount: BigSource): this;
    static from: {
        readonly KINT: (amount: BigSource) => MonetaryAmount<Currency<{
            readonly KINT: 12;
            readonly Planck: 0;
        }>, {
            readonly KINT: 12;
            readonly Planck: 0;
        }>;
        readonly Planck: (amount: BigSource) => MonetaryAmount<Currency<{
            readonly KINT: 12;
            readonly Planck: 0;
        }>, {
            readonly KINT: 12;
            readonly Planck: 0;
        }>;
    };
    static zero: MonetaryAmount<Currency<{
        readonly KINT: 12;
        readonly Planck: 0;
    }>, {
        readonly KINT: 12;
        readonly Planck: 0;
    }>;
}
