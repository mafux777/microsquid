import { BigSource } from "big.js";
import { Currency, MonetaryAmount } from "../monetary";
export declare const KusamaUnit: {
    readonly KSM: 12;
    readonly Planck: 0;
};
export declare type KusamaUnit = typeof KusamaUnit;
export declare const Kusama: Currency<KusamaUnit>;
export declare type Kusama = typeof Kusama;
export declare class KusamaAmount extends MonetaryAmount<Kusama, KusamaUnit> {
    constructor(amount: BigSource, unit?: keyof KusamaUnit);
    withAmount(amount: BigSource): this;
    static from: {
        readonly KSM: (amount: BigSource) => MonetaryAmount<Currency<{
            readonly KSM: 12;
            readonly Planck: 0;
        }>, {
            readonly KSM: 12;
            readonly Planck: 0;
        }>;
        readonly Planck: (amount: BigSource) => MonetaryAmount<Currency<{
            readonly KSM: 12;
            readonly Planck: 0;
        }>, {
            readonly KSM: 12;
            readonly Planck: 0;
        }>;
    };
    static zero: MonetaryAmount<Currency<{
        readonly KSM: 12;
        readonly Planck: 0;
    }>, {
        readonly KSM: 12;
        readonly Planck: 0;
    }>;
}
