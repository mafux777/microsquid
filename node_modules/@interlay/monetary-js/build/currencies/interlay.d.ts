import { BigSource } from "big.js";
import { Currency, MonetaryAmount } from "../monetary";
export declare const InterlayUnit: {
    readonly INTR: 10;
    readonly Planck: 0;
};
export declare type InterlayUnit = typeof InterlayUnit;
export declare const Interlay: Currency<InterlayUnit>;
export declare type Interlay = typeof Interlay;
export declare class InterlayAmount extends MonetaryAmount<Interlay, InterlayUnit> {
    constructor(amount: BigSource, unit?: keyof InterlayUnit);
    withAmount(amount: BigSource): this;
    static from: {
        readonly INTR: (amount: BigSource) => MonetaryAmount<Currency<{
            readonly INTR: 10;
            readonly Planck: 0;
        }>, {
            readonly INTR: 10;
            readonly Planck: 0;
        }>;
        readonly Planck: (amount: BigSource) => MonetaryAmount<Currency<{
            readonly INTR: 10;
            readonly Planck: 0;
        }>, {
            readonly INTR: 10;
            readonly Planck: 0;
        }>;
    };
    static zero: MonetaryAmount<Currency<{
        readonly INTR: 10;
        readonly Planck: 0;
    }>, {
        readonly INTR: 10;
        readonly Planck: 0;
    }>;
}
