import { BigSource } from "big.js";
import { Currency, MonetaryAmount, UnitList } from "../monetary";
declare const EthereumUnit: {
    readonly ETH: 18;
    readonly GWei: 9;
    readonly Wei: 0;
};
export declare type EthereumUnit = typeof EthereumUnit;
export declare const Ethereum: Currency<typeof EthereumUnit>;
export declare type Ethereum = typeof Ethereum;
export declare class EthereumAmount extends MonetaryAmount<Ethereum, EthereumUnit> {
    constructor(amount: BigSource, unit?: keyof EthereumUnit);
    withAmount(amount: BigSource): this;
    static from: {
        readonly ETH: (amount: BigSource) => MonetaryAmount<Currency<{
            readonly ETH: 18;
            readonly GWei: 9;
            readonly Wei: 0;
        }>, {
            readonly ETH: 18;
            readonly GWei: 9;
            readonly Wei: 0;
        }>;
        readonly GWei: (amount: BigSource) => MonetaryAmount<Currency<{
            readonly ETH: 18;
            readonly GWei: 9;
            readonly Wei: 0;
        }>, {
            readonly ETH: 18;
            readonly GWei: 9;
            readonly Wei: 0;
        }>;
        readonly Wei: (amount: BigSource) => MonetaryAmount<Currency<{
            readonly ETH: 18;
            readonly GWei: 9;
            readonly Wei: 0;
        }>, {
            readonly ETH: 18;
            readonly GWei: 9;
            readonly Wei: 0;
        }>;
    };
    static zero: MonetaryAmount<Currency<{
        readonly ETH: 18;
        readonly GWei: 9;
        readonly Wei: 0;
    }>, {
        readonly ETH: 18;
        readonly GWei: 9;
        readonly Wei: 0;
    }>;
}
export interface ERC20<Units extends UnitList> extends Currency<Units> {
    address: string;
}
declare const TetherUnit: {
    readonly Tether: 6;
    readonly Raw: 0;
};
export declare type TetherUnit = typeof TetherUnit;
export declare class Tether implements ERC20<TetherUnit> {
    readonly address: string;
    constructor(address: string);
    get units(): TetherUnit;
    get base(): TetherUnit[keyof TetherUnit];
    get rawBase(): TetherUnit[keyof TetherUnit];
    get name(): string;
    get ticker(): string;
}
export declare class TetherAmount extends MonetaryAmount<Tether, typeof TetherUnit> {
    static from: {
        readonly Tether: (amount: BigSource) => MonetaryAmount<Tether, {
            readonly Tether: 6;
            readonly Raw: 0;
        }>;
        readonly Raw: (amount: BigSource) => MonetaryAmount<Tether, {
            readonly Tether: 6;
            readonly Raw: 0;
        }>;
    };
}
export {};
