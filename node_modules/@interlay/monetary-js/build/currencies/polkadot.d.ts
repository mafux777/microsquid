import { BigSource } from "big.js";
import { Currency, MonetaryAmount } from "../monetary";
export declare const PolkadotUnit: {
    readonly DOT: 10;
    readonly Planck: 0;
};
export declare type PolkadotUnit = typeof PolkadotUnit;
export declare const Polkadot: Currency<PolkadotUnit>;
export declare type Polkadot = typeof Polkadot;
export declare class PolkadotAmount extends MonetaryAmount<Polkadot, PolkadotUnit> {
    constructor(amount: BigSource, unit?: keyof PolkadotUnit);
    withAmount(amount: BigSource): this;
    static from: {
        readonly DOT: (amount: BigSource) => MonetaryAmount<Currency<{
            readonly DOT: 10;
            readonly Planck: 0;
        }>, {
            readonly DOT: 10;
            readonly Planck: 0;
        }>;
        readonly Planck: (amount: BigSource) => MonetaryAmount<Currency<{
            readonly DOT: 10;
            readonly Planck: 0;
        }>, {
            readonly DOT: 10;
            readonly Planck: 0;
        }>;
    };
    static zero: MonetaryAmount<Currency<{
        readonly DOT: 10;
        readonly Planck: 0;
    }>, {
        readonly DOT: 10;
        readonly Planck: 0;
    }>;
}
